import{_ as e,c as r,o as t,a}from"./app.0f29970b.js";const s="/blog/assets/waterfall.6a4935ac.jpg",o="/blog/assets/overall.1853dc85.svg",_=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"前端需要性能优化么？","slug":"前端需要性能优化么","link":"#前端需要性能优化么","children":[]},{"level":2,"title":"如何学习前端性能优化？","slug":"如何学习前端性能优化","link":"#如何学习前端性能优化","children":[]},{"level":2,"title":"旅途的行程路线","slug":"旅途的行程路线","link":"#旅途的行程路线","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"relativePath":"performance/index.md"}'),l={name:"performance/index.md"},i=a('<h2 id="前端需要性能优化么" tabindex="-1">前端需要性能优化么？ <a class="header-anchor" href="#前端需要性能优化么" aria-hidden="true">#</a></h2><p>性能优化一直以来都是前端工程领域中的一个重要部分。很多资料<sup>[1]</sup><sup>[2]</sup><sup>[3]</sup>表明，网站应用的性能（加载速度、交互流畅度）优化对于提高用户留存、转化率等都有积极影响。可以理解为，提升你的网站性能，就是提升你的业务数据（甚至是业务收入）。</p><p>性能优化广义上会包含前端优化和后端优化。后端优化的关注点更多的时候是在增加资源利用率、降低资源成本以及提高稳定性上。相较于后端，前端的性能优化会更直接与用户的体验挂钩。从用户体验侧来说，前端服务 5s 的加载时间优化缩减 80%(1s) 与后端服务 50ms 的响应优化缩减 80%(10ms) 相比，用户的体验提升会更大。因此很多时候，与体验相关的性能的瓶颈会出现在前端。</p><blockquote><p>当然后端性能优化非常重要，正如上面所说，它们的关注点可能不同。前端类似于最后一公里，由于和用户最近，所以性能问题会直接影响到用户体验。这一系列文章关注点会放在“前端性能优化”上。</p></blockquote><p><img src="'+s+'" alt="waterfall"></p><h2 id="如何学习前端性能优化" tabindex="-1">如何学习前端性能优化？ <a class="header-anchor" href="#如何学习前端性能优化" aria-hidden="true">#</a></h2><p>在我和一些同学接触的过程中，发现作为前端工程师，大家其实都具备一定的性能优化意识，同时也有自己的优化“武器库”，例如懒加载、资源合并、避免 reflow 等等。虽然大家对性能优化都有自己的思路，不过大多是分散在某几个点，较难形成一个完整的体系。业界也有很多优质的资料，例如<a href="https://github.com/creeperyang/blog/issues/1" target="_blank" rel="noreferrer">雅虎的性能优化 35 条</a><sup>[4]</sup>，但是<strong>性能优化作为一个系统性工程</strong>，大家想要系统性地去学习并不容易。</p><p>从用户开始来访问你的网站应用，到最终它在上面浏览信息、操作交互，其间经历了非常多的环节，每个环节都有可能出现性能问题，同时也是我们实现性能提升机会。所以，前端性能优化会要求你从整体维度来分析系统，甚至是业务。</p><p>那么如何能够更有效地梳理与理解性能优化呢？回想到每每面试都会被问到：“从地址栏输入XXX到访问之间经历了什么？”其实我们也可以从这个视角来看待性能优化。</p><p>从访问开始，用户可能会经历类似「查询缓存 -&gt; 发送请求 -&gt; 等待响应 -&gt; 页面解析 -&gt; 下载并处理各类静态资源 -&gt; 运行时 -&gt; 预加载（等待后续的请求）」这样一个不断往复的“旅程” —— 也就是我们的「性能优化之旅」。Web 应用在其中每一站都可能遇到性能问题，当然也会有对应的优化手段。</p><p>所以在这次的「性能优化之旅」会沿着这条路径具体介绍每个环节中常见的性能问题以及优化技术。通过与 Web 应用的访问流程相结合，帮助大家全面理解与掌握前端的性能优化。</p><p>如果准备好了，咱们就可以出发了 ——</p><p><a href="./cache.html">第一站 - 缓存 🔜</a></p><h2 id="旅途的行程路线" tabindex="-1">旅途的行程路线 <a class="header-anchor" href="#旅途的行程路线" aria-hidden="true">#</a></h2><p><img src="'+o+'" alt="overall"></p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-hidden="true">#</a></h2><ol><li><a href="https://medium.com/@Pinterest_Engineering/driving-user-growth-with-performance-improvements-cfc50dafadd7" target="_blank" rel="noreferrer">Driving user growth with performance improvements</a></li><li><a href="https://www.hobo-web.co.uk/your-website-design-should-load-in-4-seconds/" target="_blank" rel="noreferrer">How Fast Should A Website Load in 2019?</a></li><li><a href="https://www.bbc.com/news/business-37100091" target="_blank" rel="noreferrer">How long will you wait for a shopping website to load?</a></li><li><a href="https://github.com/creeperyang/blog/issues/1" target="_blank" rel="noreferrer">Best Practices for Speeding Up Your Web Site (Yahoo)</a></li><li><a href="https://blog.hubspot.com/blog/tabid/6307/bid/32307/15-things-people-absolutely-hate-about-your-website.aspx" target="_blank" rel="noreferrer">17 Things People Absolutely Hate About Your Website</a></li><li><a href="https://developers.google.com/web/fundamentals/performance/why-performance-matters/" target="_blank" rel="noreferrer">Why Performance Matters</a></li></ol>',17),n=[i];function p(h,c,d,g,u,b){return t(),r("div",null,n)}const m=e(l,[["render",p]]);export{_ as __pageData,m as default};
