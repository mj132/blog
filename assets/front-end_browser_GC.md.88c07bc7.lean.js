import{_ as r,c as o,b as e,d as s,e as n,w as p,a as l,r as t,o as c}from"./app.89d965e1.js";const i="/blog/assets/GC00.7e677062.png",d="/blog/assets/GC01.991bc463.png",C="/blog/assets/GC02.cd487d4f.png",h="/blog/assets/GC03.8169dd0b.png",D="/blog/assets/GC04.6b835b21.png",y="/blog/assets/GC05.e21ccd1a.png",A="/blog/assets/GC06.c8a0e4b8.png",b="/blog/assets/GC07.2e30f27c.png",F="/blog/assets/GC08.95d50d28.png",u="/blog/assets/GC09.bca3a794.png",_="/blog/assets/GC10.24f0ad12.png",O=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"垃圾回收机制","slug":"垃圾回收机制","link":"#垃圾回收机制","children":[{"level":3,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":3,"title":"GC 是什么","slug":"gc-是什么","link":"#gc-是什么","children":[]},{"level":3,"title":"垃圾产生&为何回收","slug":"垃圾产生-为何回收","link":"#垃圾产生-为何回收","children":[]},{"level":3,"title":"垃圾回收策略","slug":"垃圾回收策略","link":"#垃圾回收策略","children":[]},{"level":3,"title":"V8 对 GC 的优化","slug":"v8-对-gc-的优化","link":"#v8-对-gc-的优化","children":[]}]}],"relativePath":"front-end/browser/GC.md"}'),m={name:"front-end/browser/GC.md"},g=l("",6),v=l("",13),f=l("",8),S=l("",7),G=l("",112);function x(V,T,E,J,j,k){const a=t("font");return c(),o("div",null,[g,e("p",null,[s("GC 即 "),n(a,{color:"#f00"},{default:p(()=>[s("Garbage Collection")]),_:1}),s(" ，程序工作过程中会产生很多 垃圾，这些垃圾是程序不用的内存或者是之前用过了，以后不会再用的内存空间，而 GC 就是负责回收垃圾的，因为他工作在引擎内部，所以对于我们前端来说，GC 过程是相对比较无感的，这一套引擎执行而对我们又相对无感的操作也就是常说的 "),n(a,{color:"#f00"},{default:p(()=>[s("垃圾回收机制")]),_:1}),s(" 了")]),v,e("p",null,[s("在 JavaScript 内存管理中有一个概念叫做 "),n(a,{color:"#f00"},{default:p(()=>[s("可达性")]),_:1}),s(" ，就是那些以某种方式可访问或者说可用的值，它们被保证存储在内存中，反之不可访问则需回收")]),f,e("p",null,[s("就像它的名字一样，此算法分为 "),n(a,{color:"#f00"},{default:p(()=>[s("标记")]),_:1}),s(" 和 "),n(a,{color:"#f00"},{default:p(()=>[s("清除")]),_:1}),s(" 两个阶段，标记阶段即为所有活动对象做上标记，清除阶段则把没有标记（也就是非活动对象）销毁")]),S,e("p",null,[s("标记清除算法有一个很大的缺点，就是在清除之后，剩余的对象内存位置是不变的，也会导致空闲内存空间是不连续的，出现了 "),n(a,{color:"#f00"},{default:p(()=>[s("内存碎片")]),_:1}),s("（如下图），并且由于剩余空闲内存不是一整块，它是由不同大小内存组成的内存列表，这就牵扯出了内存分配的问题")]),G])}const w=r(m,[["render",x]]);export{O as __pageData,w as default};
