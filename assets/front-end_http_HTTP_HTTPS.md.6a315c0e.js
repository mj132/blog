import{_ as e,c as t,o as c,a as l}from"./app.987cfbbf.js";const S=JSON.parse('{"title":"HTTP 和 HTTPS 的区别","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、HTTP","slug":"一、http","link":"#一、http","children":[]},{"level":2,"title":"二、HTTPS","slug":"二、https","link":"#二、https","children":[]},{"level":2,"title":"三、区别","slug":"三、区别","link":"#三、区别","children":[]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}],"relativePath":"front-end/http/HTTP_HTTPS.md"}'),T={name:"front-end/http/HTTP_HTTPS.md"},a=l('<h1 id="http-和-https-的区别" tabindex="-1">HTTP 和 HTTPS 的区别 <a class="header-anchor" href="#http-和-https-的区别" aria-hidden="true">#</a></h1><p><img src="https://static.vue-js.com/f50c71f0-b20b-11eb-ab90-d9ae814b240d.png" alt=""></p><h2 id="一、http" tabindex="-1">一、HTTP <a class="header-anchor" href="#一、http" aria-hidden="true">#</a></h2><p><code>HTTP</code> (HyperText Transfer Protocol)，即超文本运输协议，是实现网络通信的一种规范</p><p><img src="https://static.vue-js.com/fda119b0-b20b-11eb-85f6-6fac77c0c9b3.png" alt=""></p><p>在计算机和网络世界有，存在不同的协议，如广播协议、寻址协议、路由协议等等......</p><p>而<code>HTTP</code>是一个传输协议，即将数据由 A 传到 B 或将 B 传输到 A，并且 A 与 B 之间能够存放很多第三方，如： A&lt;=&gt;X&lt;=&gt;Y&lt;=&gt;Z&lt;=&gt;B</p><p>传输的数据并不是计算机底层中的二进制包，而是完整的、有意义的数据，如 HTML 文件, 图片文件, 查询结果等超文本，能够被上层应用识别</p><p>在实际应用中，<code>HTTP</code>常被用于在<code>Web</code>浏览器和网站服务器之间传递信息，以明文方式发送内容，不提供任何方式的数据加密</p><p>特点如下：</p><ul><li>支持客户/服务器模式</li><li>简单快速：客户向服务器请求服务时，只需传送请求方法和路径。由于 HTTP 协议简单，使得 HTTP 服务器的程序规模小，因而通信速度很快</li><li>灵活：HTTP 允许传输任意类型的数据对象。正在传输的类型由 Content-Type 加以标记</li><li>无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间</li><li>无状态：HTTP 协议无法根据之前的状态进行本次的请求处理</li></ul><h2 id="二、https" tabindex="-1">二、HTTPS <a class="header-anchor" href="#二、https" aria-hidden="true">#</a></h2><p>在上述介绍<code>HTTP</code>中，了解到<code>HTTP</code>传递信息是以明文的形式发送内容，这并不安全。而<code>HTTPS</code>出现正是为了解决<code>HTTP</code>不安全的特性</p><p>为了保证这些隐私数据能加密传输，让<code>HTTP</code>运行安全的<code>SSL/TLS</code>协议上，即 HTTPS = HTTP + SSL/TLS，通过 <code>SSL</code>证书来验证服务器的身份，并为浏览器和服务器之间的通信进行加密</p><p><code>SSL</code> 协议位于<code>TCP/IP</code> 协议与各种应用层协议之间，浏览器和服务器在使用 <code>SSL</code> 建立连接时需要选择一组恰当的加密算法来实现安全通信，为数据通讯提供安全支持</p><p><img src="https://static.vue-js.com/078c50c0-b20c-11eb-ab90-d9ae814b240d.png" alt=""></p><p>流程图如下所示：</p><p><img src="https://static.vue-js.com/0e409fc0-b20c-11eb-85f6-6fac77c0c9b3.png" alt=""></p><ul><li>首先客户端通过 URL 访问服务器建立 SSL 连接</li><li>服务端收到客户端请求后，会将网站支持的证书信息（证书中包含公钥）传送一份给客户端</li><li>客户端的浏览器开始协商 SSL 连接的安全等级，也就是信息加密的等级</li><li>客户端的浏览器根据双方同意的安全等级，建立会话密钥，然后利用网站的公钥将会话密钥加密，并传送给网站</li><li>服务器利用自己的私钥解密出会话密钥</li><li>服务器利用会话密钥加密与客户端之间的通信</li></ul><h2 id="三、区别" tabindex="-1">三、区别 <a class="header-anchor" href="#三、区别" aria-hidden="true">#</a></h2><ul><li>HTTPS 是 HTTP 协议的安全版本，HTTP 协议的数据传输是明文的，是不安全的，HTTPS 使用了 SSL/TLS 协议进行了加密处理，相对更安全</li><li>HTTP 和 HTTPS 使用连接方式不同，默认端口也不一样，HTTP 是 80，HTTPS 是 443</li><li>HTTPS 由于需要设计加密以及多次握手，性能方面不如 HTTP</li><li>HTTPS 需要 SSL，SSL 证书需要钱，功能越强大的证书费用越高</li></ul><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-hidden="true">#</a></h2><ul><li><a href="https://www.cnblogs.com/klb561/p/10289199.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/klb561/p/10289199.html</a></li><li><a href="https://www.jianshu.com/p/205c0fc51c97" target="_blank" rel="noreferrer">https://www.jianshu.com/p/205c0fc51c97</a></li></ul>',23),i=[a];function d(o,r,p,h,s,n){return c(),t("div",null,i)}const H=e(T,[["render",d]]);export{S as __pageData,H as default};
